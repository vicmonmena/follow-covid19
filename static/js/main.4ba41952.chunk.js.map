{"version":3,"sources":["components/stat.jsx","components/countries.jsx","components/cssselector.jsx","App.js","index.js"],"names":["Stat","title","value","className","from","number","to","config","delay","Intl","NumberFormat","format","formatValue","toFixed","toUpperCase","Countries","selectedCountry","handleSelectCountry","useState","countries","setCountries","loading","setLoading","useEffect","a","fetch","then","res","json","catch","err","console","log","data","countryList","undefined","fetchData","id","onChange","event","target","Object","keys","map","country","key","CSSselector","selectedCSS","handleSelectCSS","url","setUrl","style","marginLeft","href","rel","App","empty","confirmed","recovered","deaths","stats","setStats","setConfirmed","setRecovered","setDeaths","Date","lastUpdate","setLastUpdate","setSelectedCountry","setSelectedCSS","loadData","dateString","d","ye","DateTimeFormat","year","mo","month","da","day","hr","hour","mn","minute","sc","second","error","formatDate","window","location","reload","ReactDOM","render","document","getElementById"],"mappings":"sRA4BeA,EAxBF,SAAC,GAAqC,IAAD,IAAnCC,aAAmC,MAA3B,WAA2B,MAAfC,aAAe,MAAP,EAAO,EAMhD,OACE,yBAAKC,UAAU,QACX,kBAAC,SAAD,CACEC,KAAM,CAAEC,OAAQ,GAChBC,GAAI,CAAED,OAAQH,GACdK,OAAQ,CAACC,MAAO,OACb,gBAAEH,EAAF,EAAEA,OAAF,OAAc,4BAVzB,SAAqBH,GACnB,OAAO,IAAIO,KAAKC,aAAa,SAASC,OAAOT,GAShBU,CAAYP,EAAOQ,QAAQ,QAErD,4BAAMZ,EAAMa,iB,OCqCJC,EApDG,SAAC,GAAwD,IAAD,IAAtDC,uBAAsD,MAApC,UAAoC,EAAzBC,EAAyB,EAAzBA,oBAAyB,EAGtCC,mBAAS,IAH6B,mBAGjEC,EAHiE,KAGtDC,EAHsD,OAI1CF,oBAAS,GAJiC,mBAIjEG,EAJiE,KAIxDC,EAJwD,KA4BxE,OAtBAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACEF,GAAW,GADb,SAEqBG,MAAM,4CACtBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MALlB,OAEQG,EAFR,OAOUC,OAAuBC,IAATF,EAAqBA,EAAKd,UAAY,GAC1DC,OAAsBe,IAATF,EAAA,aAAsB,QAAW,MAASC,GAAgB,CAAC,0BAA2B,QACrGZ,GAAW,GATb,4CADc,uBAAC,WAAD,wBAYdc,KACC,IAUD,yBAAKjC,UAAU,aACC,IAAZkB,GACA,sDAEW,IAAXA,GACA,4BACEgB,GAAG,UACHC,SAfR,SAA6BC,GAC3B,GAAGA,EAAMC,OAAOtC,QAAQc,EAAiB,OAAO,EAE9CC,EAAoBsB,EAAMC,OAAOtC,QAa7BA,MAAOc,GAELyB,OAAOC,KAAKvB,GAAWwB,KAAI,SAAAC,GAAO,OAAI,4BAAQC,IAAKD,EAAS1C,MAAO0C,GAAUA,SCD1EE,G,MArCK,SAAC,GAA6C,IAAD,IAA3CC,mBAA2C,MAA7B,OAA6B,EAArBC,EAAqB,EAArBA,gBAAqB,EACzC9B,mBAAS,sCADgC,mBACxD+B,EADwD,KACnDC,EADmD,KAe/D,OAZA3B,qBAAU,WACRQ,QAAQC,IAAI,gBAAiBe,GAC7BG,EAAuB,WAAhBH,EAA2B,iCAAmC,wCACpE,CAACA,IAUF,yBAAK5C,UAAU,eACb,0BAAMA,UAAU,qBAAhB,gCAGA,4BACEkC,GAAG,cACHC,SAdN,SAAyBC,GACvB,GAAGA,EAAMC,OAAOtC,QAAQ6C,EAAa,OAAO,EAE1CC,EAAgBT,EAAMC,OAAOtC,QAY3BA,MAAO6C,GACL,4BAAQF,IAAI,OAAO3C,MAAM,QAAzB,cACA,4BAAQ2C,IAAI,SAAS3C,MAAM,UAA3B,iBAEJ,uBAAGiD,MAAO,CAACC,WAAY,QAASC,KAAMJ,EAAKT,OAAO,SAASc,IAAI,uBAA/D,WC6HSC,MAtJf,WAEE,IAAMC,EAAQ,CACZC,UAAW,CAACvD,MAAO,GACnBwD,UAAW,CAACxD,MAAO,GACnByD,OAAQ,CAACzD,MAAO,IALL,EAQSgB,mBAAS,kCARlB,mBAQN+B,EARM,KAQDC,EARC,OASahC,mBAASsC,GATtB,mBASNI,EATM,KASCC,EATD,OAUiB3C,oBAAS,GAV1B,mBAUNG,EAVM,KAUGC,EAVH,OAWqBJ,mBAAS,CAAChB,MAAO,IAXtC,mBAWNuD,EAXM,KAWKK,EAXL,OAYqB5C,mBAAS,CAAChB,MAAO,IAZtC,mBAYNwD,EAZM,KAYKK,EAZL,OAae7C,mBAAS,CAAChB,MAAO,IAbhC,mBAaNyD,EAbM,KAaEK,EAbF,OAcuB9C,mBAAS,IAAI+C,MAdpC,mBAcNC,EAdM,KAcMC,EAdN,OAeiCjD,mBAAS,WAf1C,mBAeNF,EAfM,KAeWoD,EAfX,OAgByBlD,mBAAS,QAhBlC,mBAgBN6B,EAhBM,KAgBOsB,EAhBP,KA2Gb,OAzFA9C,qBAAU,WACR,mCACC,IAEHA,qBAAU,YAwBV,SAAkB0B,GAAK,4CACrB,4BAAAzB,EAAA,6DACEF,GAAW,GADb,SAEqBG,MAAMwB,GACtBvB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GACLC,QAAQC,IAAI,QAASF,MAL3B,OAEQG,EAFR,OAOE4B,OAAkB1B,IAATF,EAAqBA,EAAOuB,GACrClC,GAAW,GARb,4CADqB,uBAAC,WAAD,wBAWrBc,GAlCAkC,CAASrB,KACR,CAACA,IAEJ1B,qBAAU,WAEkB,IAAD,GADzBQ,QAAQC,IAAI,UAAW4B,QACTzB,IAAVyB,IACFE,EAAaF,EAAMH,WACnBM,EAAaH,EAAMF,WACnBM,EAAUJ,EAAMD,QAChBQ,EAAa,UAACP,EAAMM,kBAAP,QAAqB,aAElCJ,EAAa,CAAC5D,MAAO,IACrB6D,EAAa,CAAC7D,MAAO,IACrB8D,EAAU,CAAC9D,MAAO,IAClBiE,EAAc,cAEf,CAACP,IAEJrC,qBAAU,WAC2B2B,EAAX,YAApBlC,EAAsC,iCAC9B,4CAAD,OAA6CA,MACvD,CAACA,IAgEF,yBAAKb,UAAU,OACb,iFACA,kBAAC,EAAD,CACEa,gBAAiBA,EACjBC,oBA5BN,SAA6BD,GAC3BoD,EAAmBpD,MA6BjB,mGACa,IAAZK,GACC,8DAxDN,SAAoBkD,GAClB,IAAIA,EAcF,MAAO,eAbP,IACE,IAAMC,EAAI,IAAIP,KAAKM,GACbE,EAAK,IAAIhE,KAAKiE,eAAe,QAAS,CAAEC,KAAM,YAAahE,OAAO6D,GAClEI,EAAK,IAAInE,KAAKiE,eAAe,QAAS,CAAEG,MAAO,SAAUlE,OAAO6D,GAChEM,EAAK,IAAIrE,KAAKiE,eAAe,QAAS,CAAEK,IAAK,YAAapE,OAAO6D,GACjEQ,EAAK,IAAIvE,KAAKiE,eAAe,QAAS,CAAEO,KAAM,YAAatE,OAAO6D,GAClEU,EAAK,IAAIzE,KAAKiE,eAAe,QAAS,CAAES,OAAQ,YAAaxE,OAAO6D,GACpEY,EAAK,IAAI3E,KAAKiE,eAAe,QAAS,CAAEW,OAAQ,YAAa1E,OAAO6D,GAC1E,MAAM,GAAN,OAAUM,EAAV,YAAgBF,EAAhB,YAAsBH,EAAtB,kBAAkCO,EAAlC,YAAwCE,EAAxC,YAA8CE,GAC9C,MAAOE,GACP,MAAO,gBA4CuBC,CAAWrB,KAE7B,IAAZ7C,GACA,4CAEW,IAAXA,GACA,yBAAKlB,UAAU,eACb,kBAAC,EAAD,CACEF,MAAM,cACNC,MAAOuD,EAAUvD,QAEnB,kBAAC,EAAD,CACED,MAAM,cACNC,MAAOwD,EAAUxD,QAEnB,kBAAC,EAAD,CACED,MAAM,aACNC,MAAOyD,EAAOzD,SAIpB,yBAAKC,UAAU,UACb,kBAAC,EAAD,CACE6C,gBA9CR,SAAyBD,GACvB,OAAQA,GACN,IAAK,SACHsB,EAAetB,GACf,iCACA,MACF,QACEsB,EAAetB,GACfyC,OAAOC,SAASC,QAAO,KAuCrB3C,YAAaA,IAEf,yBAAK5C,UAAU,kBACb,8EAA6C,uBAAGkD,KAAK,+CAA+Cb,OAAO,SAASc,IAAI,uBAA3E,UAA7C,SChJVqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4ba41952.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Spring} from 'react-spring/renderprops'\n\nconst Stat = ({title = \"no title\", value = 0}) => {\n\n  function formatValue(value) {\n    return new Intl.NumberFormat(\"es-ES\").format(value)\n  }\n\n  return (\n    <div className=\"stat\">\n        <Spring \n          from={{ number: 0 }}\n          to={{ number: value }}\n          config={{delay: 300}}>\n            {({number}) => <h2 >{formatValue(number.toFixed(0))}</h2>}\n        </Spring>\n       <h5 >{title.toUpperCase()}</h5>\n    </div>\n  );\n};\n\nStat.propTypes = {\n  title: PropTypes.string,\n  value: PropTypes.number\n};\n\nexport default Stat;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Countries = ({selectedCountry = \"MUNDIAL\", handleSelectCountry}) => {\n\n  // const [url, setUrl] = useState('https://covid19.mathdro.id/api/countries');\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const data = await fetch('https://covid19.mathdro.id/api/countries')\n        .then(res => res.json())\n        .catch(err => {\n          console.log(err)\n        });\n        const countryList = data !== undefined ? data.countries : []\n        setCountries(data !== undefined ? {'MUNDIAL': \"md\", ...countryList } : {'Error loading countries': 'err'});\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  function handleChangeCountry(event) {\n    if(event.target.value===selectedCountry) return false;\n    else {\n      handleSelectCountry(event.target.value)\n    }\n  }\n\n  return (\n    <div className=\"topright\">\n      { loading === true && \n        <p>Cargando países ...</p>\n      }\n      { loading ===false && \n        <select \n          id=\"country\"\n          onChange={handleChangeCountry}\n          value={selectedCountry}>\n          {\n            Object.keys(countries).map(country => <option key={country} value={country}>{country}</option>)\n          }\n        </select>\n      }\n    </div>\n  );\n};\n\nCountries.propTypes = {\n  selectedCountry: PropTypes.string,\n  handleSelectCountry: PropTypes.func.isRequired\n};\n\nexport default Countries;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './components.css'\n\nconst CSSselector = ({selectedCSS = \"flat\", handleSelectCSS}) => {\n  const [url, setUrl] = useState('https://drasite.com/flat-remix-css')\n\n  useEffect(() => {\n    console.log(\"selectedCSS: \", selectedCSS)\n    setUrl(selectedCSS === \"skeuos\" ? \"https://drasite.com/skeuos-css\" : \"https://drasite.com/flat-remix-css\")\n  }, [selectedCSS]);\n\n  function handleChangeCSS(event) {\n    if(event.target.value===selectedCSS) return false;\n    else {\n      handleSelectCSS(event.target.value)\n    }\n  }\n\n  return (\n    <div className=\"cssselector\">\n      <span className=\"cssselector-title\">\n        Cómo quieres ver esta web\n      </span>\n      <select \n        id=\"cssselector\"\n        onChange={handleChangeCSS}\n        value={selectedCSS}>\n          <option key=\"flat\" value=\"flat\">Flat Remix</option>\n          <option key=\"skeuos\" value=\"skeuos\">Skeuomorphic</option>\n      </select>\n      <a style={{marginLeft: \"10px\"}} href={url} target=\"_blank\" rel=\"noopener noreferrer\">info</a>\n    </div>\n  );\n};\n\nCSSselector.propTypes = {\n  selectedCSS: PropTypes.string,\n  handleChangeCSS: PropTypes.func\n};\n\nexport default CSSselector;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Stat from './components/stat';\nimport Countries from './components/countries';\nimport CSSselector from './components/cssselector';\n\nfunction App() {\n\n  const empty = {\n    confirmed: {value: 0},\n    recovered: {value: 0},\n    deaths: {value: 0}\n  }\n\n  const [url, setUrl] = useState('https://covid19.mathdro.id/api')\n  const [stats, setStats] = useState(empty);\n  const [loading, setLoading] = useState(false)\n  const [confirmed, setConfirmed] = useState({value: 0})\n  const [recovered, setRecovered] = useState({value: 0})\n  const [deaths, setDeaths] = useState({value: 0})\n  const [lastUpdate, setLastUpdate] = useState(new Date())\n  const [selectedCountry, setSelectedCountry] = useState(\"MUNDIAL\")\n  const [selectedCSS, setSelectedCSS] = useState(\"flat\")\n  \n  useEffect(() => {\n    import('./css/flat/flat-remix.css');\n  }, []);\n\n  useEffect(() => {\n    loadData(url)\n  }, [url]);\n\n  useEffect(() => {\n    console.log(\"stats: \", stats)\n    if (stats !== undefined) {\n      setConfirmed(stats.confirmed)\n      setRecovered(stats.recovered)\n      setDeaths(stats.deaths)\n      setLastUpdate(stats.lastUpdate ?? 'no info')\n    } else {\n      setConfirmed({value: 0})\n      setRecovered({value: 0})\n      setDeaths({value: 0})\n      setLastUpdate('no info')\n    }\n  }, [stats])\n\n  useEffect(() => {\n    if (selectedCountry === \"MUNDIAL\") setUrl('https://covid19.mathdro.id/api')\n    else setUrl(`https://covid19.mathdro.id/api/countries/${selectedCountry}`)\n  }, [selectedCountry])\n\n  function loadData(url) {\n    async function fetchData() {\n      setLoading(true);\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(err => {\n          console.log(\"err: \", err)\n        });\n      setStats(data !== undefined ? data : empty);\n      setLoading(false);\n    }\n    fetchData();\n  }\n\n  function formatDate(dateString) {\n    if (dateString) {\n      try {\n        const d = new Date(dateString)\n        const ye = new Intl.DateTimeFormat('es-ES', { year: 'numeric' }).format(d)\n        const mo = new Intl.DateTimeFormat('es-ES', { month: 'long' }).format(d)\n        const da = new Intl.DateTimeFormat('es-ES', { day: '2-digit' }).format(d)\n        const hr = new Intl.DateTimeFormat('es-ES', { hour: 'numeric' }).format(d)\n        const mn = new Intl.DateTimeFormat('es-ES', { minute: 'numeric' }).format(d)\n        const sc = new Intl.DateTimeFormat('es-ES', { second: 'numeric' }).format(d)\n        return `${da}-${mo}-${ye} a las ${hr}:${mn}:${sc}`\n      } catch (error) {\n        return 'No hay fecha'\n      }\n    } else {\n      return 'No hay fecha'\n    }\n  }\n\n  /**\n   * Maneja el valor del país seleccionado\n   *\n   * @param {*} selectedCountry\n   */\n  function handleSelectCountry(selectedCountry) {\n    setSelectedCountry(selectedCountry)\n  }\n\n  /**\n   * Maneja el valor del tipo de hoja de estilo (CSS Stylesheet) seleccionada\n   *\n   * @param {*} selectedCSS\n   */\n  function handleSelectCSS(selectedCSS) {\n    switch (selectedCSS) {\n      case \"skeuos\":\n        setSelectedCSS(selectedCSS)\n        import('./css/skeuos/skeuos.css');\n        break;\n      default:\n        setSelectedCSS(selectedCSS)\n        window.location.reload(false);\n        // await import('./css/flat/flat-remix.css');\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Seguimiento sobre el COVID-19 (Nuevo CORONAVIRUS)</h1>\n      <Countries \n        selectedCountry={selectedCountry}\n        handleSelectCountry={handleSelectCountry} \n      />\n      <h3>A continuación mostramos las estadísticas sobre los casos...</h3>\n      {loading === false && \n        <label>Última actualización: {formatDate(lastUpdate)}</label>\n      }\n      { loading === true && \n        <p>Cargando ...</p>\n      }\n      { loading ===false && \n        <div className=\"paper stats\">\n          <Stat \n            title=\"Confirmados\"\n            value={confirmed.value}\n          />\n          <Stat \n            title=\"Recuperados\"\n            value={recovered.value}\n          />\n          <Stat \n            title=\"Fallecidos\"\n            value={deaths.value}\n          />\n        </div>\n      }\n      <div className=\"footer\">\n        <CSSselector \n          handleSelectCSS={handleSelectCSS}\n          selectedCSS={selectedCSS}\n        />\n        <div className=\"code-available\">\n          <h5>El código de esta web está disponible en <a href=\"https://github.com/vicmonmena/follow-covid19\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>.</h5>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}